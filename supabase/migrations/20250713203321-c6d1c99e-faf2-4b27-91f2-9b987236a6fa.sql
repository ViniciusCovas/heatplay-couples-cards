-- Create levels table
CREATE TABLE public.levels (
  id uuid NOT NULL DEFAULT gen_random_uuid() PRIMARY KEY,
  name text NOT NULL,
  description text,
  icon text,
  color text,
  bg_color text,
  sort_order integer NOT NULL DEFAULT 0,
  is_active boolean NOT NULL DEFAULT true,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now()
);

-- Create questions table
CREATE TABLE public.questions (
  id uuid NOT NULL DEFAULT gen_random_uuid() PRIMARY KEY,
  level_id uuid NOT NULL REFERENCES public.levels(id) ON DELETE CASCADE,
  text text NOT NULL,
  category text,
  is_active boolean NOT NULL DEFAULT true,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now()
);

-- Enable RLS
ALTER TABLE public.levels ENABLE ROW LEVEL SECURITY;
ALTER TABLE public.questions ENABLE ROW LEVEL SECURITY;

-- Create policies for public read access
CREATE POLICY "Anyone can view levels" 
ON public.levels 
FOR SELECT 
USING (true);

CREATE POLICY "Anyone can create levels" 
ON public.levels 
FOR INSERT 
WITH CHECK (true);

CREATE POLICY "Anyone can update levels" 
ON public.levels 
FOR UPDATE 
USING (true);

CREATE POLICY "Anyone can delete levels" 
ON public.levels 
FOR DELETE 
USING (true);

CREATE POLICY "Anyone can view questions" 
ON public.questions 
FOR SELECT 
USING (true);

CREATE POLICY "Anyone can create questions" 
ON public.questions 
FOR INSERT 
WITH CHECK (true);

CREATE POLICY "Anyone can update questions" 
ON public.questions 
FOR UPDATE 
USING (true);

CREATE POLICY "Anyone can delete questions" 
ON public.questions 
FOR DELETE 
USING (true);

-- Create trigger function for updated_at
CREATE OR REPLACE FUNCTION public.update_updated_at_column()
RETURNS TRIGGER AS $$
BEGIN
  NEW.updated_at = now();
  RETURN NEW;
END;
$$ LANGUAGE plpgsql;

-- Create triggers for automatic timestamp updates
CREATE TRIGGER update_levels_updated_at
  BEFORE UPDATE ON public.levels
  FOR EACH ROW
  EXECUTE FUNCTION public.update_updated_at_column();

CREATE TRIGGER update_questions_updated_at
  BEFORE UPDATE ON public.questions
  FOR EACH ROW
  EXECUTE FUNCTION public.update_updated_at_column();

-- Insert existing hardcoded levels
INSERT INTO public.levels (name, description, icon, color, bg_color, sort_order) VALUES
('BÃ¡sico', 'Preguntas simples para conocerse mejor', 'ðŸŒ±', 'hsl(142 76% 36%)', 'hsl(142 76% 36% / 0.1)', 1),
('Intermedio', 'Preguntas mÃ¡s profundas sobre la relaciÃ³n', 'ðŸŒ¸', 'hsl(280 100% 70%)', 'hsl(280 100% 70% / 0.1)', 2),
('Avanzado', 'Preguntas Ã­ntimas y reflexivas', 'ðŸ”¥', 'hsl(0 84% 60%)', 'hsl(0 84% 60% / 0.1)', 3),
('Experto', 'Preguntas complejas para parejas experimentadas', 'ðŸ’Ž', 'hsl(217 91% 60%)', 'hsl(217 91% 60% / 0.1)', 4);

-- Insert sample questions for each level
INSERT INTO public.questions (level_id, text, category) 
SELECT l.id, q.text, q.category
FROM public.levels l
CROSS JOIN (
  VALUES 
    ('Â¿CuÃ¡l fue tu primera impresiÃ³n de mÃ­?', 'reflexion'),
    ('Â¿QuÃ© canciÃ³n te recuerda a nosotros?', 'dinamica'),
    ('Â¿CuÃ¡l es tu recuerdo favorito juntos?', 'dinamica'),
    ('Â¿QuÃ© admiras mÃ¡s de mÃ­?', 'reflexion'),
    ('Â¿CÃ³mo te imaginas nuestro futuro?', 'reflexion')
) AS q(text, category)
WHERE l.name = 'BÃ¡sico'

UNION ALL

SELECT l.id, q.text, q.category
FROM public.levels l
CROSS JOIN (
  VALUES 
    ('Â¿QuÃ© miedo compartes conmigo que no le dirÃ­as a nadie mÃ¡s?', 'profunda'),
    ('Â¿En quÃ© momento supiste que me amabas?', 'profunda'),
    ('Â¿QuÃ© aspectos de nuestra relaciÃ³n te gustarÃ­a mejorar?', 'reflexion'),
    ('Â¿CuÃ¡l ha sido tu mayor crecimiento personal desde que estamos juntos?', 'reflexion'),
    ('Â¿QuÃ© sueÃ±o compartes conmigo?', 'profunda')
) AS q(text, category)
WHERE l.name = 'Intermedio'

UNION ALL

SELECT l.id, q.text, q.category
FROM public.levels l
CROSS JOIN (
  VALUES 
    ('Â¿CuÃ¡l es tu mayor inseguridad en nuestra relaciÃ³n?', 'intima'),
    ('Â¿QuÃ© fantasÃ­a te gustarÃ­a cumplir conmigo?', 'intima'),
    ('Â¿En quÃ© momentos sientes que somos mÃ¡s vulnerables juntos?', 'profunda'),
    ('Â¿QuÃ© secreto nunca le has contado a nadie?', 'intima'),
    ('Â¿CÃ³mo crees que hemos cambiado desde que estamos juntos?', 'profunda')
) AS q(text, category)
WHERE l.name = 'Avanzado'

UNION ALL

SELECT l.id, q.text, q.category
FROM public.levels l
CROSS JOIN (
  VALUES 
    ('Â¿CuÃ¡les son tus lÃ­mites absolutos en nuestra relaciÃ³n?', 'intima'),
    ('Â¿QuÃ© conversaciÃ³n pendiente evitamos tener?', 'profunda'),
    ('Â¿En quÃ© aspecto sientes que somos mÃ¡s compatibles?', 'profunda'),
    ('Â¿QuÃ© te da mÃ¡s miedo perder de nuestra relaciÃ³n?', 'intima'),
    ('Â¿CÃ³mo manejas los conflictos internos sobre nosotros?', 'intima')
) AS q(text, category)
WHERE l.name = 'Experto';